--
-- Materialized view of current_view_all to allow for indexing
--
{{#if materializeView}}
CREATE MATERIALIZED VIEW IF NOT EXISTS {{namespace}}{{name}}_current_all_mview AS
  SELECT rev_id, ext_uid, {{#if storeSource}}source_id,{{/if}} {{#if extIdType}}ext_id,{{/if}}
         deleted, data_update_date
         -- Materialized Fields
{{~#each extractedFields}}{{#if this.definition}}{{#unless this.doNotMaterialize}}
         , {{@key}}
{{/unless}}{{/if}}{{/each}}

    FROM {{namespace}}{{name}}_rev_view
   WHERE current;

-- rev_id and ext_uid should be unique so give them unique indexes
CREATE UNIQUE INDEX IF NOT EXISTS {{name}}_current_all_mview_rev_id_idx ON {{namespace}}{{name}}_current_all_mview (rev_id);
CREATE UNIQUE INDEX IF NOT EXISTS {{name}}_current_all_mview_ext_uid_idx ON {{namespace}}{{name}}_current_all_mview (ext_uid);
CREATE INDEX IF NOT EXISTS {{name}}_current_all_mview_deleted_idx ON {{namespace}}{{name}}_current_all_mview (deleted);
{{#if extIdType}}
{{#if storeSource}}
-- Cannot be unique because this will cause issues with ON CONFLICT loading (as long as the uid is correctly formed, the PK will prevent duplicates)
CREATE INDEX IF NOT EXISTS {{name}}_current_all_mview_source_id_ext_id_idx ON {{namespace}}{{name}}_current_all_mview (source_id, ext_id);
{{else}}
-- Cannot be unique because this will cause issues with ON CONFLICT loading (as long as the uid is correctly formed, the PK will prevent duplicates)
CREATE INDEX IF NOT EXISTS {{name}}_current_all_mview_ext_id_idx ON {{namespace}}{{name}}_current_all_mview (ext_id);
{{/if}}
{{/if}}

-- data_update_date commonly queried for chained updates
CREATE INDEX IF NOT EXISTS {{name}}_current_all_mview_data_update_date_idx ON {{namespace}}{{name}}_current_all_mview (data_update_date);

-- Custom field indexes
{{~#each extractedFields}}{{#if this.index}}
CREATE {{#if this.unique}}UNIQUE {{/if}}INDEX IF NOT EXISTS {{../name}}_current_all_mview_{{@key}}_idx ON {{../namespace}}{{../name}}_current_all_mview ({{@key}});
{{/if}}{{/each}}
{{~#each indexes}}
CREATE {{#if this.unique}}UNIQUE {{/if}}INDEX IF NOT EXISTS {{../name}}_current_all_mview_{{@key}}_idx ON {{../namespace}}{{../name}}_current_all_mview {{this.definition}};{{#if this.comment}} -- {{this.comment}}{{/if}}
{{/each}}

{{else}}
CREATE OR REPLACE VIEW {{namespace}}{{name}}_current_all_mview AS
  SELECT * FROM {{namespace}}{{name}}_rev_view WHERE current;
{{/if}}

--
-- Current-All view
--
{{#if materializeView}}
CREATE OR REPLACE VIEW {{namespace}}{{name}}_current_all AS
  SELECT a.*,
         b.data_rev, b.raw_data, b.raw_delta, b.raw_revert, b.fetch_date,
         b.ext_create_date, b.ext_update_date, b.rev_create_date, b.rev_update_date
         -- Unmaterialized fields
{{~#each extractedFields}}{{#if this.definition}}{{#if this.doNotMaterialize}}
         , {{@key}}
{{/if}}{{/if}}{{/each}}
    FROM {{namespace}}{{name}}_current_all_mview a
    JOIN {{namespace}}{{name}}_rev_view b ON a.rev_id = b.rev_id;
{{else}}
CREATE OR REPLACE VIEW {{namespace}}{{name}}_current_all AS
    SELECT * FROM {{namespace}}{{name}}_rev_view WHERE current;
{{/if}}

--
-- Current view
--
{{#if materializeView}}
CREATE OR REPLACE VIEW {{namespace}}{{name}}_current AS
  SELECT a.*,
         b.data_rev, b.raw_data, b.raw_delta, b.raw_revert, b.fetch_date,
         b.ext_create_date, b.ext_update_date, b.rev_create_date, b.rev_update_date
         -- Unmaterialized fields
{{~#each extractedFields}}{{#if this.definition}}{{#if this.doNotMaterialize}}
         , {{@key}}
{{/if}}{{/if}}{{/each}}
    FROM {{namespace}}{{name}}_current_all_mview a
    JOIN {{namespace}}{{name}}_rev_view b ON a.rev_id = b.rev_id
   WHERE NOT a.deleted;
{{else}}
CREATE OR REPLACE VIEW {{namespace}}{{name}}_current AS
    SELECT * FROM {{namespace}}{{name}}_rev_view WHERE current AND NOT deleted;
{{/if}}

--
-- Refresh the materialized view
--
CREATE OR REPLACE PROCEDURE {{namespace}}{{name}}_current_refresh(counts INOUT JSONB )
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
DECLARE
  temp INTEGER;
BEGIN
{{#if materializeView}}
  REFRESH MATERIALIZED VIEW {{#if concurrentView}}CONCURRENTLY {{/if}}{{namespace}}{{name}}_current_all_mview;
{{/if}}
{{#each extraRefresh}}
  {{this}}
{{/each}}
END;
$$;
